<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell Script on simeononsecurity</title><link>/tags/powershell-script/</link><description>Recent content in PowerShell Script on simeononsecurity</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/powershell-script/index.xml" rel="self" type="application/rss+xml"/><item><title>Harden Windows with Windows Defender Application Control (WDAC)</title><link>/github/windows-defender-application-control-hardening/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>/github/windows-defender-application-control-hardening/</guid><description>Windows-Defender-Application-Control-Hardening Harden Windows with Windows Defender Application Control (WDAC)
A list of scripts and tools this collection utilizes: MicrosoftDocs - WDAC-Toolkit Additional configurations were considered from: Microsoft - Recommended block rules Microsoft - Recommended driver block rules Microsoft - Windows Defender Application Control Explanation: Default Policies: The &amp;ldquo;Default&amp;rdquo; policies use only the default features available in the WDAC-Toolkit. Recommended Policies: The &amp;ldquo;Recommended&amp;rdquo; policies use the default features as well as Microsoft&amp;rsquo;s recommended blocks and driver block rules.</description></item><item><title>Install RSAT ActiveDirectory PowerShell Module Offline</title><link>/github/offine-ps-activedirectory-install/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>/github/offine-ps-activedirectory-install/</guid><description>Offine-PS-ActiveDirectory-Install Install the PowerShell RSAT ActiveDirectory Module Offline
How to install: Download the script From the extracted folder, run .\sos-offlinepsadinstall.ps1 #Require elivation for script run #Requires -RunAsAdministrator #Copy Files #Install PowerShell Modules Copy-Item -Path .\Files\ActiveDirectory -Destination &amp;#34;C:\Windows\System32\WindowsPowerShell\v1.0\Modules\&amp;#34; -Force -Recurse #Install Required DLLs Copy-Item -Path .\Files\WinSxS\* -Destination &amp;#34;C:\Windows\WinSxS\&amp;#34; -Force -Recurse #Unblock New PowerShell Modules and DLLs Get-ChildItem &amp;#34;C:\Windows\System32\WindowsPowerShell\v1.0\Modules\ActiveDirectory\&amp;#34; -recurse | Unblock-File Unblock-File -Path &amp;#34;C:\Windows\WinSxS\Microsoft.ActiveDirectory.Management.resources.dll&amp;#34; Unblock-File -Path &amp;#34;C:\Windows\WinSxS\Microsoft.ActiveDirectory.Management.dll&amp;#34; #Install PowerShell Modules and DLLs Import-Module -Name ActiveDirectory -Force -Global Import-Module &amp;#34;C:\Windows\WinSxS\Microsoft.</description></item><item><title>Hardening Windows Systems with Applocker</title><link>/github/applocker-hardening/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>/github/applocker-hardening/</guid><description>Ultimate Applocker Hardening Configuration Script.
What does this script do? Locks down system resources to bare minumum needed for basic OS functionality Recommended reading: api0cradle/UltimateAppLockerByPassList) Microsoft Recommended Block Rules MotiBa/AppLocker NSA Cyber Bitlocker Gidance Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:
.\sos-applockerhardening.ps1</description></item><item><title>Hardening Windows Terminals. Command Prompt and PowerShell</title><link>/github/windows-terminal-hardening/</link><pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate><guid>/github/windows-terminal-hardening/</guid><description>Scripts and Documentation for Hardening Windows Command Prompt and PowerShell
What does this script do? Disables Command Prompt Disables PowerShell v2 Disables WSMAN and PSRemoting Enables PowerShell Constrained Language Mode Enables PowerShell Logging Recommended Reading: PowerShell Best Practices PowerShell Constrained Language Mode Securing PowerShell in the Enterprise Windows Defender Hardening Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:</description></item><item><title>Automating the Windows Defender STIG</title><link>/github/windows-defender-stig-script/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>/github/windows-defender-stig-script/</guid><description>STIGS/SRGs Applied: Windows Defender Antivirus V1R9 Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:
.\sos-windowsdefenderstig.ps1</description></item><item><title>Hardening Windows Defender</title><link>/github/windows-defender-hardening/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>/github/windows-defender-hardening/</guid><description>What does this script do? Enables Cloud-delivered Protections Enables Controlled Folder Access Enables Network Protections Enables Intrusion Prevention System Enables Windows Defender Application Control Policies Enables Windows Defender Attack Surface Reduction Rules Enables Windows Defender Exploit Protections Implements all requirements listed in the Windows Defender Antivirus STIG Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:</description></item></channel></rss>