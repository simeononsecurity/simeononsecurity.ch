<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Compliance on simeononsecurity</title><link>/tags/compliance/</link><description>Recent content in Compliance on simeononsecurity</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/compliance/index.xml" rel="self" type="application/rss+xml"/><item><title>Hardening Windows Systems with Applocker</title><link>/github/applocker-hardening/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>/github/applocker-hardening/</guid><description>Ultimate Applocker Hardening Configuration Script.
What does this script do? Locks down system resources to bare minumum needed for basic OS functionality Recommended reading: api0cradle/UltimateAppLockerByPassList) Microsoft Recommended Block Rules MotiBa/AppLocker NSA Cyber Bitlocker Gidance Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:
.\sos-applockerhardening.ps1</description></item><item><title>Hardening Windows Terminals. Command Prompt and PowerShell</title><link>/github/windows-terminal-hardening/</link><pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate><guid>/github/windows-terminal-hardening/</guid><description>Scripts and Documentation for Hardening Windows Command Prompt and PowerShell
What does this script do? Disables Command Prompt Disables PowerShell v2 Disables WSMAN and PSRemoting Enables PowerShell Constrained Language Mode Enables PowerShell Logging Recommended Reading: PowerShell Best Practices PowerShell Constrained Language Mode Securing PowerShell in the Enterprise Windows Defender Hardening Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:</description></item><item><title>Automating the Windows Defender STIG</title><link>/github/windows-defender-stig-script/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>/github/windows-defender-stig-script/</guid><description>STIGS/SRGs Applied: Windows Defender Antivirus V1R9 Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:
.\sos-windowsdefenderstig.ps1</description></item><item><title>Hardening Windows Defender</title><link>/github/windows-defender-hardening/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>/github/windows-defender-hardening/</guid><description>What does this script do? Enables Cloud-delivered Protections Enables Controlled Folder Access Enables Network Protections Enables Intrusion Prevention System Enables Windows Defender Application Control Policies Enables Windows Defender Attack Surface Reduction Rules Enables Windows Defender Exploit Protections Implements all requirements listed in the Windows Defender Antivirus STIG Download the required files: Download the required files from the GitHub Repository
How to run the script: The script may be lauched from the extracted GitHub download like this:</description></item><item><title>STIG Compliant GPOs and Importing them into a Windows Domain</title><link>/github/stig-compliant-domain-prep/</link><pubDate>Tue, 08 Sep 2020 15:13:17 -0500</pubDate><guid>/github/stig-compliant-domain-prep/</guid><description>STIG Compliant Domain Prep Import all the GPOs provided by SimeonOnSecurity to assist in making your domain compliant with all applicable STIGs and SRGs.
Notes: This script is designed for use in Enterprise environments
STIGS/SRGs Applied: Windows 10 V1R23
Windows Defender Antivirus V1R9
Windows Firewall V1R7
Internet Explorer 11 V1R19
Adobe Reader Pro DC Continous V1R2
Adobe Reader Pro DC Classic V1R3</description></item><item><title>Adobe Reader DC STIG Script</title><link>/github/adobe-reader-dc-stig-script/</link><pubDate>Thu, 27 Aug 2020 16:50:08 -0500</pubDate><guid>/github/adobe-reader-dc-stig-script/</guid><description>Automate Adobe Reader Pro DC STIG Apply the Adobe Reader Pro DC STIGs in one simple script.
Notes: This script is designed for use in Enterprise environments and will insure 100% compliance with the applicable stigs.
STIGS/SRGs Applied: Adobe Reader Pro DC Continous V1R2
Adobe Reader Pro DC Classic V1R3
Download the script: You may download the script from the GitHub Repository
How to run the script: The script may be launched from the extracted GitHub download like this:</description></item><item><title>STIGing Standalone Windows Systems</title><link>/github/stiging-standalone-windows-systems/</link><pubDate>Wed, 26 Aug 2020 11:59:03 -0500</pubDate><guid>/github/stiging-standalone-windows-systems/</guid><description>STIGing Standalone Windows 10 Systems Download all the required files from the GitHub Repository
We are seeking help with the following .Net issue
Introduction: Windows 10 is insecure operating system out of the box and requires many changes to insure FISMA compliance. Organizations like Microsoft, Cyber.mil, the Department of Defense, and the National Security Agency have recommended and required configuration changes to lockdown, harden, and secure the operating system and ensure government compliance.</description></item><item><title>Dot NET STIG Script</title><link>/github/dot-net-stig-script/</link><pubDate>Thu, 20 Aug 2020 22:14:22 -0500</pubDate><guid>/github/dot-net-stig-script/</guid><description>Automate the .NET Framework 4 STIG Applying the .NET STIG is definitely not straightforward. For many administrators it can take hours to fully implement on a single system. This script applies the required registry changes and modifies the machine.config file to implement FIPS and other controls as required.
Work in Progress
DO NOT APPLY IN PRODUCTION
Notes: This script can not and will not ever get the .NET stig to 100% compliance.</description></item><item><title>FireFox STIG Script</title><link>/github/firefox-stig-script/</link><pubDate>Sat, 15 Aug 2020 19:17:57 -0500</pubDate><guid>/github/firefox-stig-script/</guid><description>FireFox STIG Script The Firefox V4R29 isn&amp;rsquo;t the easiest of STIGs to apply. This script will implement most of the required FireFox policies. In the future, the FireFox ADMX templates and GPO&amp;rsquo;s will be applied in this script.
Work In Progress
Download the required files Download the required files from the GitHub Repository
How to run the script The script may be lauched from the extracted GitHub download like this:</description></item><item><title>Automating Oracle JRE 8 STIG</title><link>/github/oracle-jre-8-stig/</link><pubDate>Wed, 05 Aug 2020 21:54:53 -0500</pubDate><guid>/github/oracle-jre-8-stig/</guid><description>Automate Oracle JRE 8 STIGS The Oracle JRE STIGs arenâ€™t so straight forward, requiring administrators to research JAVA documentation and generate java config files, when most administrators are used to solely STIG-ing using group policy.
Download the required files Download the required files from the GitHub Repository
STIGS/SRGs Applied: Oracle JRE 8 V1R5 Sources: MyITGuy - deployment.properties
cbu.edu - Java Technotes
How to run the script The script may be lauched from the extracted GitHub download like this:</description></item><item><title>Optimize, Harden, and Debloat Windows 10 Deployments</title><link>/github/optimizing-and-hardening-windows10-deployments/</link><pubDate>Wed, 22 Jul 2020 20:15:14 -0500</pubDate><guid>/github/optimizing-and-hardening-windows10-deployments/</guid><description>Introduction: Windows 10 is an invasive and insecure operating system out of the box. Organizations like PrivacyTools.io, Microsoft, Cyber.mil, the Department of Defense, and the National Security Agency have recommended configuration changes to lockdown, harden, and secure the operating system. These changes cover a wide range of mitigations including blocking telemetry, macros, removing bloatware, and preventing many digital and physical attacks on a system. This script aims to automate the configurations recommended by those organizations.</description></item><item><title>STIGing Standalone Windows Servers</title><link>/github/stiging-standalone-windows-servers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/github/stiging-standalone-windows-servers/</guid><description>STIGing Standalone Windows Servers Download all the required files from the GitHub Repository
Introduction: Windows Server 2012, 2016, and 2019 are insecure operating systems out of the box and requires many changes to insure FISMA compliance. Microsoft, Cyber.mil, the Department of Defense, and the National Security Agency have recommended and required configuration changes to lockdown, harden, and secure the operating system and ensure government compliance. These changes cover a wide range of mitigations including blocking telemetry, macros, removing bloatware, and preventing many physical attacks on a system.</description></item></channel></rss>