<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows 10 on simeononsecurity</title><link>/tags/windows-10/</link><description>Recent content in Windows 10 on simeononsecurity</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/windows-10/index.xml" rel="self" type="application/rss+xml"/><item><title>GLVK Auto Install Script for KMS Activation</title><link>/github/kms-auto-ps/</link><pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate><guid>/github/kms-auto-ps/</guid><description>SimeonOnSecurity - KMS-Auto-PS GLVK Auto Install Script for KMS Activation
Recommened Reading: Microsoft - KMS Client Keys (GLVK) How to run the script: Manual Install: If manually downloaded, the script must be launched from an administrative powershell in the directory containing all the files from the GitHub Repository
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Force Get-ChildItem -Recurse *.ps1 | Unblock-File .\sos-kmsglvkactivationauto.ps1</description></item><item><title>Install RSAT ActiveDirectory PowerShell Module Offline</title><link>/github/offine-ps-activedirectory-install/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>/github/offine-ps-activedirectory-install/</guid><description>Offine-PS-ActiveDirectory-Install Install the PowerShell RSAT ActiveDirectory Module Offline
How to install: Download the script From the extracted folder, run .\sos-offlinepsadinstall.ps1 #Require elivation for script run #Requires -RunAsAdministrator #Copy Files #Install PowerShell Modules Copy-Item -Path .\Files\ActiveDirectory -Destination &amp;#34;C:\Windows\System32\WindowsPowerShell\v1.0\Modules\&amp;#34; -Force -Recurse #Install Required DLLs Copy-Item -Path .\Files\WinSxS\* -Destination &amp;#34;C:\Windows\WinSxS\&amp;#34; -Force -Recurse #Unblock New PowerShell Modules and DLLs Get-ChildItem &amp;#34;C:\Windows\System32\WindowsPowerShell\v1.0\Modules\ActiveDirectory\&amp;#34; -recurse | Unblock-File Unblock-File -Path &amp;#34;C:\Windows\WinSxS\Microsoft.ActiveDirectory.Management.resources.dll&amp;#34; Unblock-File -Path &amp;#34;C:\Windows\WinSxS\Microsoft.ActiveDirectory.Management.dll&amp;#34; #Install PowerShell Modules and DLLs Import-Module -Name ActiveDirectory -Force -Global Import-Module &amp;#34;C:\Windows\WinSxS\Microsoft.</description></item><item><title>STIGing Standalone Windows Systems</title><link>/github/stiging-standalone-windows-systems/</link><pubDate>Wed, 26 Aug 2020 11:59:03 -0500</pubDate><guid>/github/stiging-standalone-windows-systems/</guid><description>STIGing Standalone Windows 10 Systems Download all the required files from the GitHub Repository
We are seeking help with the following .Net issue
Introduction: Windows 10 is insecure operating system out of the box and requires many changes to insure FISMA compliance. Organizations like Microsoft, Cyber.mil, the Department of Defense, and the National Security Agency have recommended and required configuration changes to lockdown, harden, and secure the operating system and ensure government compliance.</description></item><item><title>Windows 10 Branding</title><link>/github/windows-10-branding/</link><pubDate>Fri, 14 Aug 2020 14:37:16 -0500</pubDate><guid>/github/windows-10-branding/</guid><description>Setup branding on Windows 10 and Server 2016/2019 Systems Many organizations have a need or want to control the branding of a Windows system. This includes the desktop wallpaper, the users avatar, the Windows lock screen, and sometimes the OEM Logo. In Windows 10, Windows Server 2016, and Windows Server 2019 this is not particularly easy. But, with the aide of the linked script, we can partially automate it and make the process much easier.</description></item><item><title>Optimize, Harden, and Debloat Windows 10 Deployments</title><link>/github/optimizing-and-hardening-windows10-deployments/</link><pubDate>Wed, 22 Jul 2020 20:15:14 -0500</pubDate><guid>/github/optimizing-and-hardening-windows10-deployments/</guid><description>Introduction: Windows 10 is an invasive and insecure operating system out of the box. Organizations like PrivacyTools.io, Microsoft, Cyber.mil, the Department of Defense, and the National Security Agency have recommended configuration changes to lockdown, harden, and secure the operating system. These changes cover a wide range of mitigations including blocking telemetry, macros, removing bloatware, and preventing many digital and physical attacks on a system. This script aims to automate the configurations recommended by those organizations.</description></item><item><title>Automating Windows Updates with Chocolatey, PSWindowsUpdate, and Startup Scripts</title><link>/github/automating-windows-updates-with-chocolatey-pswindowsupdate-and-startup-scripts/</link><pubDate>Wed, 22 Jul 2020 17:46:00 -0500</pubDate><guid>/github/automating-windows-updates-with-chocolatey-pswindowsupdate-and-startup-scripts/</guid><description>Automating Windows Updates with Chocolatey, PSWindowsUpdate, and Startup Scripts Download all supporting files from the GitHub Repository
Â In today&amp;rsquo;s modern workplace environment, system administrators constantly are battling for time. Rolling out the latest Windows updates can be extremely time consuming taking up to a week given enough systems. Along with some assistance from Chocolatey, PSWindowsUpdates, and Startup Scripts, Systems Administrators can roll out update with as little as a single reboot of each machine.</description></item></channel></rss>