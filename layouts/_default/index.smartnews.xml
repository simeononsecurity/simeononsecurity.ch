{{- $pctx := . -}}
{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}
{{- $pages := slice -}}
{{- if or $.IsHome $.IsSection -}}
{{- $pages = $pctx.RegularPages -}}
{{- else -}}
{{- $pages = $pctx.Pages -}}
{{- end -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
{{- $pages = $pages | first $limit -}}
{{- end -}}

{{ $page := "" }}
{{ $currentPageTitle := "" }}
{{ $path := "" }}
{{ $dir := ""}}

{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:snf="http://www.smartnews.be/snf">
  <channel>
    <title>{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{.}} on {{ end }}{{ .Site.Title }}{{ end }}</title>
    
    {{ with .Site.Params.RssImage }}
    <image>
      <url>{{ printf "%s%s" $.Permalink $.Site.Params.RssImage }}</url>
      <title>SimeonOnSecurity</title>
      <link>{{ $.Permalink }}</link>
    </image>
    {{ end }}
    
    <link>{{ $.Permalink }}</link>

    <description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{.}} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    <generator>SmartFormat RSS Generator</generator>
    {{ with .Site.LanguageCode }}
    <language>{{.}}</language>
    {{end}}
    
    <snf:logo>
      <url>https://simeononsecurity.ch/img/rectangularlogo-400x40.png</url>
    </snf:logo>

    <snf:darkModeLogo>
      <url>https://simeononsecurity.ch/img/rectangularlogo-400x40.png</url>
    </snf:darkModeLogo>

    {{ with .Site.Author.email }}
      <managingEditor>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</managingEditor>
      <webMaster>{{.}}{{ with $.Site.Author.name }} ({{.}}){{end}}</webMaster>
    {{ end }}

    <copyright>Â©{{ now.Format "2006" }} - SimeonOnSecurity</copyright>

    {{ if not .Date.IsZero }}
    <lastBuildDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>
    {{ end }}

    {{ with .OutputFormats.Get "RSS" }}
        {{ printf "<atom:link href=%q rel=\"self\" type=%q />" .Permalink .MediaType | safeHTML }}
    {{ end }}

    {{ range $pages }}
      {{ $page = . }}
      {{ with .File }}
        {{ $path = $page.File.Path }}
      {{ else }}
          {{ $path = .Path }}
      {{ end }}
      <item>
        <title>{{ .Title }}</title>
        <link>{{ .Permalink }}</link>
        <guid>{{ .Permalink }}</guid>
        <pubDate>{{ if .Date }}{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}{{ else }}Sun, 01 Mar 2020 00:00:00 -0700{{ end }}</pubDate>
        <media:status>active</media:status>
        {{ with $.Params.Author }}
          <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">{{ . }}</dc:creator>
        {{ else }}
          {{ with .Site.Author.email }}
            <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">{{ . }}</dc:creator>
          {{ else }}
            {{ with $.Site.Author.name }}
              <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">{{ . }}</dc:creator>
            {{ end }}
          {{ end }}
        {{ end }}
        {{ with .Site.LanguageCode }}
            <language>{{.}}</language>
            <dc:language>{{.}}</dc:language>
        {{end}}
        <category>
          {{ if .Params.genre }}
            {{ range $index, $genre := .Params.genre }}
              {{ if $index }}, {{ end }}"{{ $genre }}"
            {{ end }}
          {{ else if .Params.tags }}
            {{ range $index, $tag := .Params.tags }}
              {{ if $index }}, {{ end }}"{{ $tag }}"
            {{ end }}
          {{ else }}
          "cybersecurity", "security", "information security"
          {{ end }}
        </category>
        <description>
          {{ with .Description }}
            {{ . | html }}
          {{ else }}
            {{ .Summary | html }}
          {{ end }}
        </description>
        <content:encoded>
        {{ `<![CDATA[` | safeHTML }}
          {{ if .Params.Cover }}
              {{ if .Params.UseRelativeCover }}{{ printf "<img src=\"%s%s\">" .RelPermalink .Params.Cover }}
              {{ else }}{{ (printf "<img src=\"%s\">" (.Params.Cover | absURL)) | safeHTML }}
              {{ end }}
          {{ else }}
              {{ $images := .Resources.ByType "image" }}
              {{ $featured := $images.GetMatch "{*featured*,*cover*,*thumbnail*}" }}
              {{ with $featured }}{{ (printf "<img src=\"%s\">" $featured.RelPermalink) | safeHTML }}{{ end }}
          {{ end }}
          {{ .RawContent | safeHTML | safeJS | htmlUnescape | safeHTML | markdownify }}
          {{ (printf "<a href=\"%s\">Read More at %s</a>" .Permalink $.Site.BaseURL) | safeHTML }}
        {{ `]]>` | safeHTML }}
        </content:encoded>
        {{ $imgurl := "" }}
        {{ if .Params.Cover }}
          {{ if .Params.UseRelativeCover }}
            {{ $imgurl = (.RelPermalink .Params.Cover) }}
          {{ else }}
            {{ $imgurl = (.Params.Cover) }}
          {{ end }}
        {{ else }}
          {{ $images := .Resources.ByType "image" }}
          {{ $featured := $images.GetMatch "{*featured*,*cover*,*thumbnail*}" }}
          {{ with $featured }}
            {{ $imgurl = ($featured.RelPermalink) }}
          {{ end }}
        {{ end }}
        {{ if $imgurl }}
          {{ $imgResource := resources.Get $imgurl }}
          {{ if $imgResource }}
            {{ $ext := replace $imgResource.MediaType.SubType "/" "" | lower }}
            {{ $content := $imgResource.Content }}
            {{ $contentLength := printf "%d" (len $content) }}
            <enclosure url="{{ $imgResource.Permalink }}" length="{{ $contentLength }}" type="image/{{ $ext }}" />
            <media:thumbnail url="{{ $imgResource.Permalink }}" />
          {{ end }}
        {{ end }}
          <snf:advertisement>
              <snf:adcontent>
                {{ `<![CDATA[` | safeHTML }}
                      {{ "<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4092442123207538\" crossorigin=\"anonymous\"></script>" }}
                {{ `]]>` | safeHTML }}
              </snf:adcontent>
          </snf:advertisement>
          <snf:analytics>
                {{ `<![CDATA[` | safeHTML }}
                    {{ "<script>\n(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nga('create', 'G-W3SL745QY6');\nga('set', 'referrer', 'http://www.smartnews.com/');\nga('send', 'pageview');\n</script>" }}
                {{ `]]>` | safeHTML }}
          </snf:analytics>
        </item>
      {{ end }}
  </channel>
</rss>
